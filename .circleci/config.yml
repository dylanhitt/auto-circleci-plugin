---
version: 2.1

orbs:
  # Replace this with your own!
  auto_ci: dylanhitt/ci-auto-orb@<<pipeline.parameters.dev-orb-version>>
  orb-tools: circleci/orb-tools@10.0
  bats: circleci/bats@1.0
  shellcheck: circleci/shellcheck@2.0

parameters:
  run-integration-tests:
    description: >
      An internal flag to prevent integration test
      from running before a development version has been created.
    type: boolean
    default: false
  dev-orb-version:
    description: >
      The development version of the orb to test.
      This value is automatically adjusted by the "trigger-integration-tests-workflow"
      job to correspond with the specific version created by the commit and should not be edited.
      A "dev:alpha" version must exist for the initial pipeline run.
    type: string
    default: "dev:alpha"
  image-version:
    description: >
      The development image version
    type: string
    default: "dev:alpha"

dev-filters: &dev-filters
  filters:
    branches:
      ignore: master
    tags:
      ignore: /.*/

workflows:
  development:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint:
          <<: *dev-filters
      - orb-tools/pack:
          <<: *dev-filters
      - build:
          <<: *dev-filters
      - orb-tools/publish-dev:
          orb-name: dylanhitt/ci-auto-orb
          context: General
          <<: *dev-filters
          requires:
            - orb-tools/lint
            - orb-tools/pack
            - build
      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          context: General
          <<: *dev-filters
          pipeline-param-map: >-
            {\"run-integration-tests\": true, \"dev-orb-version\":
            \"dev:${CIRCLE_SHA1:0:7}\", \"image-version\":
            \"${CIRCLE_SHA1:0:7}\"}
          requires:
            - orb-tools/publish-dev

  integration-test_deploy:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      - integration-test


jobs:
  build:
    environment:
      IMAGE_NAME: dylanhitt1/auto-circelci-plugin
    docker:
      - image: cimg/base:stable
        auth:
          username: dylanhitt1
          password: $DOCKERHUB_PASSWORD
    resource_class: medium
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true
      - run:
          name: Login
          command: echo $DOCKERHUB_PASSWORD | docker login -u dylanhitt1 --password-stdin
      - run:
          name: Build Image
          command: |
            docker build -t ${IMAGE_NAME}:${CIRCLE_SHA1:0:7} \
              -f Dockerfile .
      - run:
          name: Push
          command: docker push ${IMAGE_NAME}:${CIRCLE_SHA1:0:7}
      - run:
          name: Push
          command: echo $AUTO_TOKEN; echo $AUTO_GROUP

  integration-test:
    docker:
      - image: dylanhitt1/auto-circelci-plugin:<<pipeline.parameters.image-version>>
    steps:
      - run:
          name: Push
          command: echo $AUTO_TOKEN; echo $AUTO_GROUP
      - run:
          name: Get APK file
          command: |
            curl -L \
            https://github.com/bitbar/test-samples/raw/master/apps/android/bitbar-sample-app.apk \
            -o app.apk
      - auto_ci/mobile_security_test:
          auto_file: app.apk
          auto_score: "0"
          auto_show_status_messages: "true"
